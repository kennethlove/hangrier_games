{"schemas":"DEFINE TABLE OVERWRITE area SCHEMALESS\r\n    PERMISSIONS FOR\r\n        SELECT, CREATE, UPDATE, DELETE WHERE $auth;\r\n\r\nDEFINE FIELD OVERWRITE identifier ON area;\r\nDEFINE FIELD OVERWRITE name ON area;\r\nDEFINE FIELD OVERWRITE area ON area;\r\n\r\nDEFINE INDEX OVERWRITE area_identifier ON area FIELDS identifier;\r\nDEFINE INDEX OVERWRITE area_name ON area FIELDS name;\r\nDEFINE INDEX OVERWRITE area_area ON area FIELDS area;\r\n\r\nDEFINE TABLE OVERWRITE items TYPE RELATION IN area OUT item\r\nPERMISSIONS FOR\r\n        CREATE, UPDATE, DELETE WHERE $auth;\r\n\r\nDEFINE INDEX OVERWRITE area_items ON items FIELDS area, item;\r\n\nDEFINE TABLE OVERWRITE game SCHEMAFULL\r\n    PERMISSIONS\r\n        FOR select\r\n            WHERE private = false\r\n            OR created_by.id = $auth.id\r\n        FOR create, update, delete\r\n            WHERE created_by.id = $auth.id;\r\n\r\nDEFINE FIELD OVERWRITE identifier ON game;\r\nDEFINE FIELD OVERWRITE name ON game;\r\nDEFINE FIELD OVERWRITE status ON game;\r\nDEFINE FIELD OVERWRITE day ON game;\r\nDEFINE FIELD OVERWRITE created_by ON game VALUE $auth READONLY;\r\nDEFINE FIELD OVERWRITE private ON game DEFAULT true;\r\n\r\nDEFINE INDEX OVERWRITE game_identifier ON game FIELDS identifier UNIQUE;\r\n\r\nDEFINE TABLE OVERWRITE areas TYPE RELATION IN game OUT area ENFORCED\r\nPERMISSIONS FOR\r\n        SELECT, CREATE, UPDATE, DELETE WHERE $auth;\r\n\r\nDEFINE INDEX OVERWRITE game_areas ON areas FIELDS game, area;\r\n\r\nDEFINE FUNCTION OVERWRITE fn::get_full_game($game_id: string) {\r\n    RETURN SELECT *, (\r\n        SELECT *, ->owns->item[*] AS items\r\n        FROM <-playing_in<-tribute[*]\r\n        ORDER district\r\n    )\r\n    AS tributes, (\r\n        SELECT *, ->items->item[*] AS items\r\n        FROM ->areas->area\r\n    ) AS areas, (\r\n        RETURN count(SELECT id FROM <-playing_in<-tribute)\r\n    ) AS tribute_count,\r\n    count(<-playing_in<-tribute.id) == 24\r\n    AND\r\n    count(array::distinct(<-playing_in<-tribute.district)) == 12\r\n    AS ready\r\n    FROM game\r\n    WHERE identifier = $game_id;\r\n};\r\n\r\nDEFINE FUNCTION OVERWRITE fn::get_display_game($game_id: string) {\r\n    LET $tributes = (\r\n        SELECT  in.id,\r\n                in.name,\r\n                in.district,\r\n                in.attributes.health\r\n        FROM playing_in\r\n        WHERE out.identifier = $game_id\r\n    );\r\n\r\n    LET $living_tributes = (\r\n        SELECT * FROM $tributes.in WHERE attributes.health > 0\r\n    );\r\n\r\n    LET $winner = (\r\n        IF count($living_tributes) == 1 THEN\r\n            RETURN $living_tributes[0].name\r\n        ELSE\r\n            RETURN \"\"\r\n        END\r\n    );\r\n\r\n    RETURN SELECT\r\n        identifier,\r\n        name,\r\n        status,\r\n        day,\r\n        private,\r\n        created_by.username,\r\n        created_by.id == $auth.id AS is_mine,\r\n        $tributes.in AS tributes,\r\n        count($tributes.in) as tribute_count,\r\n        count(SELECT * FROM $tributes.in WHERE attributes.health > 0) AS living_count,\r\n        count($tributes.in) == 24 AND\r\n            count(array::distinct(<-playing_in<-tribute.district)) == 12 AS ready,\r\n        $winner AS winner\r\n    FROM game\r\n    WHERE identifier = $game_id\r\n    LIMIT 1\r\n    FETCH tribute\r\n};\r\n\r\nDEFINE FUNCTION OVERWRITE fn::get_list_games() {\r\n    RETURN SELECT name, identifier, status, day, private,\r\n    created_by.id == $auth.id AS is_mine,\r\n    created_by.username,\r\n    (\r\n        RETURN count(\r\n            SELECT id FROM <-playing_in<-tribute\r\n        )\r\n    ) AS tribute_count,\r\n    (\r\n        RETURN count(\r\n            SELECT id FROM <-playing_in<-tribute WHERE attributes.health > 0\r\n        )\r\n    ) AS living_count,\r\n    count(<-playing_in<-tribute.id) == 24\r\n    AND\r\n    count(array::distinct(<-playing_in<-tribute.district)) == 12\r\n    AS ready\r\n    FROM game\r\n};\r\n\r\nDEFINE FUNCTION OVERWRITE fn::get_detail_game($game_id: string) {\r\n    LET $day = SELECT day FROM game WHERE identifier = $game_id LIMIT 1;\r\n\r\n    RETURN SELECT *, (\r\n        SELECT *,\r\n        ->owns->item[*] AS items, (\r\n            SELECT *\r\n            FROM tribute_log\r\n            WHERE tribute_identifier = $parent.identifier\r\n            AND day = $day\r\n            ORDER BY instant\r\n        ) AS log\r\n        FROM <-playing_in<-tribute[*]\r\n        ORDER district\r\n    ) AS tributes, (\r\n        SELECT *, ->items->item[*] AS items\r\n        FROM ->areas->area\r\n    ) AS areas, (\r\n        RETURN count(SELECT id FROM <-playing_in<-tribute)\r\n    ) AS tribute_count,\r\n    count(<-playing_in<-tribute.id) == 24 AND count(array::distinct(<-playing_in<-tribute.district)) == 12 AS ready,\r\n    created_by.id == $auth.id AS is_mine,\r\n    created_by.username\r\n    FROM game\r\n    WHERE identifier = $game_id\r\n};\r\n\r\nDEFINE FUNCTION OVERWRITE fn::get_tributes_by_game($game_id: string) {\r\n    RETURN SELECT (\r\n        SELECT *, ->owns->item[*] AS items\r\n        FROM <-playing_in<-tribute\r\n        ORDER district\r\n    ) AS tributes\r\n    FROM game WHERE identifier = $game_id\r\n};\r\n\r\nDEFINE FUNCTION OVERWRITE fn::get_tributes_items_by_game($game_id: string) {\r\n    RETURN SELECT <-playing_in<-tribute as tribute,\r\n        <-playing_in<-tribute->owns->item as item,\r\n        <-playing_in<-tribute->owns as owns\r\n    FROM game WHERE identifier = $game_id\r\n};\r\n\r\nDEFINE FUNCTION OVERWRITE fn::get_areas_items_by_game($game_id: string) {\r\n    RETURN SELECT ->areas->area AS area,\r\n        ->areas->area->items->item AS item,\r\n        ->areas->area->items AS items,\r\n        -> areas AS areas\r\n    FROM game WHERE identifier = $game_id;\r\n};\r\n\nDEFINE TABLE OVERWRITE item SCHEMALESS\r\n    PERMISSIONS FOR\r\n        CREATE, SELECT, UPDATE, DELETE WHERE $auth;\r\n\r\nDEFINE FIELD OVERWRITE identifier ON item;\r\nDEFINE FIELD OVERWRITE name ON item;\r\nDEFINE FIELD OVERWRITE item_type ON item;\r\nDEFINE FIELD OVERWRITE quantity ON item;\r\nDEFINE FIELD OVERWRITE attribute ON item;\r\nDEFINE FIELD OVERWRITE effect ON item;\r\n\r\nDEFINE INDEX OVERWRITE item_identifier ON item FIELDS identifier;\r\n\nDEFINE TABLE OVERWRITE message SCHEMAFULL\r\n    PERMISSIONS\r\n        FOR select FULL\r\n        FOR update, delete NONE\r\n        FOR create WHERE $auth;\r\n\r\nDEFINE FIELD OVERWRITE identifier ON message;\r\nDEFINE FIELD OVERWRITE source ON message TYPE object;\r\nDEFINE FIELD OVERWRITE source.type ON message TYPE string;\r\nDEFINE FIELD OVERWRITE source.value ON message TYPE string;\r\nDEFINE FIELD OVERWRITE game_day ON message TYPE number;\r\nDEFINE FIELD OVERWRITE subject ON message TYPE string;\r\nDEFINE FIELD OVERWRITE timestamp ON message TYPE number;\r\nDEFINE FIELD OVERWRITE content ON message TYPE string;\r\n\r\n-- Define indexes for querying\r\nDEFINE INDEX OVERWRITE message_timestamp ON message FIELDS timestamp;\r\nDEFINE INDEX OVERWRITE message_game_day ON message FIELDS game_day;\r\nDEFINE INDEX OVERWRITE message_source_type ON message FIELDS source.type;\r\nDEFINE INDEX OVERWRITE message_game_id ON message FIELDS source.value;\r\n\r\n-- Helper functions for common queries\r\nDEFINE FUNCTION OVERWRITE fn::get_messages_by_day($day: number) {\r\n    RETURN SELECT * FROM message\r\n    WHERE game_day = $day\r\n    ORDER BY timestamp;\r\n};\r\n\r\nDEFINE FUNCTION OVERWRITE fn::get_messages_by_source_type($source_type: string) {\r\n    RETURN SELECT * FROM message\r\n    WHERE source.type = $source_type\r\n    ORDER BY timestamp;\r\n};\r\n\r\nDEFINE FUNCTION OVERWRITE fn::get_game_messages_by_game_id($game_id: string) {\r\n    RETURN SELECT * FROM message\r\n    WHERE source.type = 'Game'\r\n    AND source.value = $game_id\r\n    ORDER BY timestamp;\r\n};\r\n\r\nDEFINE FUNCTION OVERWRITE fn::get_messages_by_game_id($game_id: string) {\r\n    RETURN SELECT * FROM message\r\n    WHERE string::starts_with(subject, $game_id)\r\n    ORDER BY timestamp;\r\n};\r\n\r\nDEFINE FUNCTION OVERWRITE fn::get_messages_by_tribute_id($tribute_id: string) {\r\n    RETURN SELECT * FROM message\r\n    WHERE string::contains(subject, $tribute_id)\r\n    ORDER BY timestamp;\r\n};\r\n\nDEFINE TABLE OVERWRITE script_migration SCHEMAFULL\r\n    PERMISSIONS\r\n        FOR select FULL\r\n        FOR create, update, delete NONE;\r\n\r\nDEFINE FIELD OVERWRITE script_name ON script_migration TYPE string;\r\nDEFINE FIELD OVERWRITE executed_at ON script_migration TYPE datetime VALUE time::now() READONLY;\nDEFINE TABLE OVERWRITE summary SCHEMALESS\r\n    PERMISSIONS FOR\r\n        CREATE, SELECT, UPDATE, DELETE WHERE $auth;\r\nDEFINE FIELD OVERWRITE identifier ON summary;\r\nDEFINE FIELD OVERWRITE day ON summary;\r\nDEFINE FIELD OVERWRITE content ON summary;\r\n\r\nDEFINE TABLE OVERWRITE summaries TYPE RELATION IN game OUT summary\r\nPERMISSIONS FOR\r\n        CREATE, SELECT, UPDATE, DELETE WHERE $auth;\r\n\nDEFINE TABLE OVERWRITE tribute SCHEMALESS\r\n    PERMISSIONS\r\n        FOR select FULL\r\n        FOR create, update, delete WHERE created_by = $auth;\r\n\r\nDEFINE FIELD OVERWRITE identifier ON tribute;\r\nDEFINE FIELD OVERWRITE status ON tribute;\r\nDEFINE FIELD OVERWRITE avatar ON tribute;\r\nDEFINE FIELD OVERWRITE name ON tribute;\r\nDEFINE FIELD OVERWRITE district ON tribute;\r\nDEFINE FIELD OVERWRITE area ON tribute;\r\nDEFINE FIELD OVERWRITE player_name ON tribute;\r\nDEFINE FIELD OVERWRITE statistics ON tribute;\r\nDEFINE FIELD OVERWRITE attributes ON tribute;\r\nDEFINE FIELD OVERWRITE created_by ON tribute VALUE $auth READONLY;\r\n\r\nDEFINE INDEX OVERWRITE tribute_identifier ON tribute FIELDS identifier UNIQUE;\r\nDEFINE INDEX OVERWRITE tribute_created_by ON tribute FIELDS created_by;\r\n\r\nDEFINE TABLE OVERWRITE owns TYPE RELATION IN tribute OUT item\r\nPERMISSIONS\r\n        FOR SELECT FULL\r\n        FOR CREATE, UPDATE, DELETE WHERE $auth;\r\n\r\nDEFINE INDEX OVERWRITE tribute_owns ON owns FIELDS tribute, item;\r\n\r\nDEFINE TABLE OVERWRITE playing_in TYPE RELATION IN tribute OUT game ENFORCED\r\nPERMISSIONS\r\n        FOR SELECT FULL\r\n        FOR CREATE, UPDATE, DELETE WHERE $auth;\r\n\r\nDEFINE INDEX OVERWRITE tribute_playing_in ON playing_in FIELDS tribute, game;\r\n\r\nDEFINE FUNCTION OVERWRITE fn::get_full_tribute($tribute_id: string) {\r\n    RETURN SELECT *, ->owns->item[*] AS items,\r\n    (SELECT * FROM fn::get_messages_by_tribute_id($tribute_id)) AS log,\r\n    (->playing_in->game.status)[0] == \"NotStarted\" AS editable\r\n    FROM tribute\r\n    WHERE identifier = $tribute_id;\r\n};\r\n\nDEFINE TABLE OVERWRITE user SCHEMAFULL\r\n    -- Only allow users to query their own record, including their password.\r\n    PERMISSIONS\r\n        FOR select WHERE $auth\r\n        FOR update, delete WHERE id = $auth.id;\r\n\r\nDEFINE FIELD OVERWRITE username ON user TYPE string\r\n    PERMISSIONS\r\n        FOR select FULL\r\n        FOR update WHERE id = $auth.id;\r\nDEFINE FIELD OVERWRITE password on user TYPE string;\r\n\r\nDEFINE INDEX OVERWRITE unique_username ON user FIELDS username UNIQUE;\r\n\r\nDEFINE ACCESS OVERWRITE user ON DATABASE TYPE RECORD\r\n    SIGNUP (\r\n        CREATE user CONTENT {\r\n            username: $username,\r\n            password: crypto::argon2::generate($password)\r\n        }\r\n    )\r\n    SIGNIN (\r\n        SELECT * FROM user\r\n        WHERE username = $username\r\n        AND crypto::argon2::compare(password, $password)\r\n    )\r\n    WITH JWT\r\n        ALGORITHM HS512\r\n        KEY \"6dxLjU0m8ZmAzaLEk_qAeMpeD5ZAjGYlCjlvDi5DcgdJLATIHuCReUu7CbGyCDhRSp3btd7Ezob7RPYe6fUtsA\"\r\n    DURATION FOR TOKEN 1h;\r\n","events":""}