services:
  backend:
    build:
      context: .
      dockerfile: api.Dockerfile
    ports:
      - "${SERVICE_PORT_API:-3000}:3000"
    depends_on:
      - surrealdb
    environment:
      - SERVICE_FQDN_API_3000
      - SURREAL_HOST=ws://surrealdb:8000
      - SURREAL_USER=${SURREAL_USER:-root}
      - SURREAL_PASS=${SURREAL_PASS:-root}
    labels:
      - "coolify.managed=true"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/games"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  surrealdb:
    image: surrealdb/surrealdb:latest
    command: start --user ${SURREAL_USER:-root} --pass ${SURREAL_PASS:-root}
    environment:
      - SERVICE_FQDN_SURREALDB_8000
    volumes:
      - surrealdb_data:/data
    labels:
      - "coolify.managed=true"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 5s

  frontend:
    build:
      context: .
      dockerfile: frontend.Dockerfile
      args:
        - API_HOST=${SERVICE_FQDN_API_3000:-http://localhost:3000}
    ports:
      - "${SERVICE_PORT_FRONTEND:-7575}:80"
    depends_on:
      - backend
    environment:
      - SERVICE_FQDN_HANGRY_GAMES_80
    labels:
      - "coolify.managed=true"

volumes:
  surrealdb_data:
    name: "${COMPOSE_PROJECT_NAME:-app}_surrealdb_data"
    labels:
      - "coolify.managed=true"
