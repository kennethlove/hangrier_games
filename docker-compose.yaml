version: "3.8"

services:
  backend:
    build:
      context: .
      dockerfile: api.Dockerfile
      cache_from:
        - ${REGISTRY_URL:-localhost}/hg_backend:latest
    image: ${REGISTRY_URL:-localhost}/hg_backend:latest
    restart: unless-stopped
    ports:
      - "${SERVICE_PORT_BACKEND:-3000}:3000"
    depends_on:
      - surrealdb
    environment:
      - SERVICE_FQDN_BACKEND_3000
      - 'SERVICE_FQDN_BACKEND=${SERVICE_FQDN_BACKEND:-http://backend:3000}'
      - 'SURREAL_HOST=${SURREAL_HOST:-surrealdb}'
      - 'SURREAL_USER=${SURREAL_USER:-root}'
      - 'SURREAL_PASS=${SURREAL_PASS:-root}'
    labels:
      - "coolify.managed=true"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://backend:3000/api/games"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  frontend:
    build:
      context: .
      dockerfile: frontend.Dockerfile
      args:
        - API_HOST=${SERVICE_FQDN_BACKEND:-http://backend:3000}
      cache_from:
        - ${REGISTRY_URL:-localhost}/hg_frontend:latest
    image: ${REGISTRY_URL:-localhost}/hg_frontend:latest
    restart: unless-stopped
    ports:
      - "${SERVICE_PORT_FRONTEND:-7575}:80"
    depends_on:
      - backend
    environment:
      - 'SERVICE_FQDN_FRONTEND=${SERVICE_FQDN_FRONTEND}'
      - 'API_HOST=${SERVICE_FQDN_BACKEND:-http://backend:3000}'
    labels:
      - "coolify.managed=true"

volumes:
  surrealdb_data:
    name: "${COMPOSE_PROJECT_NAME:-app}_surrealdb_data"
    labels:
      - "coolify.managed=true"

networks:
    internal:
        name: "${COMPOSE_PROJECT_NAME:-app}_internal"
        labels:
        - "coolify.managed=true"
        driver: bridge
