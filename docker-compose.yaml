version: "3.8"

services:
  backend:
    build:
      context: .
      dockerfile: api.Dockerfile
      cache_from:
        - ${REGISTRY_URL:-localhost}/hg_backend:latest
    image: ${REGISTRY_URL:-localhost}/hg_backend:latest
    restart: unless-stopped
    ports:
      - "${SERVICE_PORT_BACKEND:-3000}:3000"
    environment:
      - COOLIFY_PUBLIC_URL=${COOLIFY_BACKEND_URL:-http://localhost:3000}
      - 'SURREAL_HOST=${SURREAL_HOST:-surrealdb}'
      - 'SURREAL_USER=${SURREAL_USER:-root}'
      - 'SURREAL_PASS=${SURREAL_PASS:-root}'
    networks:
      - internal
    labels:
      - "coolify.managed=true"
      - "coolify.service.name=backend"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://backend:3000/api/games"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  frontend:
    build:
      context: .
      dockerfile: frontend.Dockerfile
      args:
        - 'API_HOST=${COOLIFY_BACKEND_URL:-http://backend:3000}'
      cache_from:
        - ${REGISTRY_URL:-localhost}/hg_frontend:latest
    image: ${REGISTRY_URL:-localhost}/hg_frontend:latest
    restart: unless-stopped
    ports:
      - "${SERVICE_PORT_FRONTEND:-7575}:80"
    depends_on:
      - backend
    environment:
      - COOLIFY_PUBLIC_URL=${COOLIFY_FRONTEND_URL:-http://localhost:7575}
    labels:
      - "coolify.managed=true"
      - "coolify.service.name=frontend"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://frontend"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 5s

networks:
    internal:
        name: "${COMPOSE_PROJECT_NAME:-app}_internal"
        labels:
        - "coolify.managed=true"
        driver: bridge
